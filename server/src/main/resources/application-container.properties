service.environment=${ENVIRONMENT}

# Database
database.name=${DB_NAME}
database.username=${DB_USER}
database.password=${DB_PASS}
database.host=${DB_HOST}
database.port=${DB_PORT}
database.schema=${DB_SCHEMA}
database.connection_pool_size=${DB_CONNECTION_POOL_SIZE}

# Redis
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}

# Provenance
provenance.chain_id=${PROVENANCE_CHAIN_ID}
provenance.channel_uri=${PROVENANCE_CHANNEL_URI}
provenance.oracle_private_key_encoded=${PROVENANCE_ORACLE_PRIVATE_KEY}
provenance.payables_contract_name=${PAYABLES_CONTRACT_NAME}
provenance.object_store_uri=${OBJECT_STORE_URI}
provenance.object_store_timeout_ms=${OBJECT_STORE_TIMEOUT_MS}

# Event Stream
event.stream.websocket_uri=${EVENT_STREAM_WEBSOCKET_URI}
event.stream.rpc_uri=${EVENT_STREAM_RPC_URI}
event.stream.epoch_height=${EVENT_STREAM_START_HEIGHT}

# Figure Tech
figure.tech.onboarding_api_prefix=${FIGURE_TECH_ONBOARDING_API_PREFIX}
# Note: The deployment for this application is in the same environment as onboarding api, but if it ever isn't, simply
# providing the apikey using this env variable will allow external communication with the service without issues.
# The app is coded to omit the apikey from requests when it is not set
figure.tech.onboarding_api_key=${FIGURE_TECH_ONBOARDING_API_KEY}
